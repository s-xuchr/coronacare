"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _get = require("lodash.get");
const _set = require("lodash.set");
class MessengerBotRequest {
    static fromJSON(json) {
        if (typeof json === 'string') {
            return JSON.parse(json, MessengerBotRequest.reviver);
        }
        else {
            const request = Object.create(MessengerBotRequest.prototype);
            // tslint:disable-next-line
            return Object.assign(request, json);
        }
    }
    static reviver(key, value) {
        return key === '' ? MessengerBotRequest.fromJSON(value) : value;
    }
    addInput(key, value) {
        if (!this.inputs) {
            this.inputs = {};
        }
        this.inputs[key] = {
            name: key,
            value,
        };
        return this;
    }
    addSessionAttribute(key, value) {
        return this;
    }
    addSessionData(key, value) {
        return this;
    }
    getAccessToken() {
        return undefined;
    }
    getDeviceName() {
        return undefined;
    }
    getInputs() {
        return this.inputs || {};
    }
    getIntentName() {
        return _get(this, 'nlu.intentName');
    }
    getLocale() {
        return this.locale || 'en-US';
    }
    getSessionAttributes() {
        return {};
    }
    getSessionData() {
        return {};
    }
    getSessionId() {
        return undefined;
    }
    getState() {
        return undefined;
    }
    getTimestamp() {
        return _get(this, `messaging[0].timestamp`, '');
    }
    getUserId() {
        return _get(this, `messaging[0].sender.id`, '');
    }
    hasAudioInterface() {
        return false;
    }
    hasScreenInterface() {
        return false;
    }
    hasVideoInterface() {
        return false;
    }
    isNewSession() {
        return false;
    }
    setAccessToken(accessToken) {
        return this;
    }
    setAudioInterface() {
        return this;
    }
    setInputs(inputs) {
        this.inputs = inputs;
        return this;
    }
    setIntentName(intentName) {
        this.nlu = {
            intentName,
        };
        return this;
    }
    setLocale(locale) {
        this.locale = locale;
        return this;
    }
    setNewSession(isNew) {
        return this;
    }
    setScreenInterface() {
        return this;
    }
    setSessionAttributes(attributes) {
        return this;
    }
    setSessionData(sessionData) {
        return this;
    }
    setState(state) {
        return this;
    }
    setTimestamp(timestamp) {
        _set(this, `messaging[0].timestamp`, timestamp);
        return this;
    }
    setUserId(userId) {
        _set(this, `messaging[0].sender.id`, userId);
        return this;
    }
    setVideoInterface() {
        return this;
    }
    toJSON() {
        return Object.assign({}, this);
    }
}
exports.MessengerBotRequest = MessengerBotRequest;
//# sourceMappingURL=MessengerBotRequest.js.map