import { AudioData, BaseApp, HandleRequest, Host, Jovo, SpeechBuilder } from 'jovo-core';
import { AirlineTemplateOptions, AttachmentMessageOptions, ButtonTemplateOptions, GenericTemplateOptions, MediaTemplateOptions, QuickReply, ReceiptTemplateOptions, SenderActionType, TextMessageOptions } from '..';
export declare class MessengerBot extends Jovo {
    $messengerBot: MessengerBot;
    constructor(app: BaseApp, host: Host, handleRequest: HandleRequest);
    getDeviceId(): string | undefined;
    getLocale(): string | undefined;
    getPlatformType(): string;
    getRawText(): string | undefined;
    getAudioData(): AudioData | undefined;
    getSelectedElementId(): string | undefined;
    getSpeechBuilder(): SpeechBuilder | undefined;
    getTimestamp(): string | undefined;
    getType(): string | undefined;
    hasAudioInterface(): boolean;
    hasScreenInterface(): boolean;
    hasVideoInterface(): boolean;
    isNewSession(): boolean;
    speechBuilder(): SpeechBuilder | undefined;
    setText(text: string): MessengerBot;
    showQuickReplies(quickReplies: Array<QuickReply | string>): MessengerBot;
    setQuickReplies(quickReplies: Array<QuickReply | string>): MessengerBot;
    addQuickReply(quickReply: QuickReply | string): MessengerBot;
    showText(options: TextMessageOptions): MessengerBot;
    showAttachment(options: AttachmentMessageOptions): MessengerBot;
    showAirlineTemplate(options: AirlineTemplateOptions): MessengerBot;
    showButtonTemplate(options: ButtonTemplateOptions): MessengerBot;
    showGenericTemplate(options: GenericTemplateOptions): MessengerBot;
    showMediaTemplate(options: MediaTemplateOptions): MessengerBot;
    showReceiptTemplate(options: ReceiptTemplateOptions): MessengerBot;
    showAction(action: SenderActionType): Promise<boolean>;
}
