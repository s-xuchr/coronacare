"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jovo_core_1 = require("jovo-core");
class MessengerBotUser extends jovo_core_1.User {
    constructor(messengerBot) {
        super(messengerBot);
        this.messengerBot = messengerBot;
    }
    getId() {
        return this.messengerBot.$request.getUserId();
    }
    async fetchProfile(fields) {
        const fieldsValue = fields || this.messengerBot.$config.userProfileFields;
        const pageAccessToken = this.messengerBot.$config.plugin.FacebookMessenger.pageAccessToken;
        if (!fieldsValue || !pageAccessToken) {
            return;
        }
        const url = `https://graph.facebook.com/${this.getId()}?fields=${fieldsValue}&access_token=${pageAccessToken}`;
        const response = await jovo_core_1.HttpService.get(url, { validateStatus: (_) => true });
        if (response.status === 200 && response.data) {
            return response.data;
        }
        jovo_core_1.Log.error(`Could not retrieve user profile. status: ${response.status}, data: ${response.data ? JSON.stringify(response.data, undefined, 2) : 'undefined'}`);
        return;
    }
    async fetchAndSetProfile(fields) {
        this.profile = await this.fetchProfile(fields);
    }
}
exports.MessengerBotUser = MessengerBotUser;
//# sourceMappingURL=MessengerBotUser.js.map